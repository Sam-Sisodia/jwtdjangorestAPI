# Generated by Django 4.2.5 on 2023-09-15 12:32

from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Student",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "email",
                    models.EmailField(max_length=254, verbose_name="Email address"),
                ),
                (
                    "mobile",
                    models.CharField(max_length=20, unique=True, verbose_name="Mobile"),
                ),
                (
                    "state",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="State"
                    ),
                ),
                (
                    "schoolname",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="School Name",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254, unique=True, verbose_name="Email address"
                    ),
                ),
                (
                    "mobile",
                    models.CharField(max_length=20, unique=True, verbose_name="Mobile"),
                ),
                (
                    "state",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="State"
                    ),
                ),
                (
                    "postal_pincode",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Postal Pin Code"
                    ),
                ),
                (
                    "ragistration_date",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        verbose_name="Date of registration",
                    ),
                ),
                (
                    "valid_upto",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Date of Expire"
                    ),
                ),
                ("expired", models.BooleanField(default=False)),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether this user should be treated as SuperUser.",
                        verbose_name="Superuser",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user is a company admin or not.",
                        verbose_name="Company Admin",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether this user should be treated as active.",
                        verbose_name="Active",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "User",
                "verbose_name_plural": "Users",
                "ordering": ["-pk"],
            },
        ),
    ]
